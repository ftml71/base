apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "br.com.leonardomiyagi.kotlinbaseapplication"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        // App Bundle Naming
        def date = new Date()
        def formattedDate = date.format('-yyyy.MM.dd-HH.mm')
        setProperty("archivesBaseName", applicationId + "-v" + versionName + "(" + versionCode + ")" + formattedDate)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
        staging {
            initWith(buildTypes.release)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date()
            def formattedDate = date.format('yyyy.MM.dd-HH.mm')
            System.out.println(formattedDate)
            outputFileName = applicationId + "-v" + versionName + "(" + versionCode + ")" + formattedDate + ".apk"
        }
    }
    buildToolsVersion '29.0.3'
}

kapt {
    generateStubs true
}

dependencies {
    // TODO Update all libraries if necessary
    def kotlin_coroutines_version = '1.3.8'
    def koin_version = '2.1.6'

    def retrofit_version = '2.9.0'
    def okhttp_version = '4.8.0'

    def mockito_version = '2.25.1'
    def mockito_kotlin_version = '2.1.0'

    def lifecycle_version = "2.2.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation "org.koin:koin-test:$koin_version"
    // Support Version
    implementation "androidx.appcompat:appcompat:1.1.0"
    // Views and Layout
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
}
